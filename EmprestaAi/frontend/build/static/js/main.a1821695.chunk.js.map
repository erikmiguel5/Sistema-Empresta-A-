{"version":3,"sources":["stores/componentes/SubmitButton.js","stores/UserStore.js","stores/componentes/InputField.js","stores/componentes/LoginForm.js","stores/componentes/Login.jsx","stores/componentes/Home.jsx","stores/componentes/CadastroForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["SubmitButton","className","disabled","this","props","onClick","text","React","Component","extendObservable","loading","isLoggedIn","cadastrar","username","email","InputField","type","placeholder","value","onChange","e","target","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","Login","class","Home","doLogout","Rect","CadastroForm","id","doCadastro","App","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1821695.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css'\r\n\r\n\r\nclass SubmitButton extends React.Component {\r\n  render(){\r\n    return (\r\n      <div className=\"submitButton\">\r\n        <button\r\n          className='btn'\r\n          disabled={this.props.disabled}\r\n          onClick={ () => this.props.onClick() }\r\n        >\r\n          <span>\r\n          { this.props.text }\r\n          </span>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import { extendObservable } from 'mobx'\r\n\r\n/**\r\n * UserStore\r\n */\r\nclass UserStore {\r\n    constructor () {\r\n        extendObservable(this, {\r\n\r\n            loading:true,\r\n            isLoggedIn: false,\r\n            cadastrar: false,\r\n            username: '',\r\n            email: ''\r\n\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from 'react';\r\n\r\n\r\nclass InputField extends React.Component {\r\n  render(){\r\n    return (\r\n      <div className=\"inputField\">\r\n        <input\r\n          className='input'\r\n          type={this.props.type}\r\n          placeholder={this.props.placeholder}\r\n          value={this.props.value}\r\n          onChange={ (e) => this.props.onChange(e.target.value)}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","import React, { Component }  from 'react';\r\nimport InputField from './InputField'\r\nimport SubmitButton from './SubmitButton'\r\nimport UserStore from '../UserStore'\r\n\r\n\r\nimport './Login.css'\r\n\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    }\r\n  }\r\n\r\n  setInputValue(property, val){\r\n    val = val.trim();\r\n    if(val.length > 12){\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      email: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    })\r\n  }\r\n\r\n  async doLogin() {\r\n    \r\n    if(!this.state.email){\r\n      return;\r\n    }\r\n    if(!this.state.password){\r\n      return\r\n    }\r\n\r\n    this.setState({\r\n      buttonDisabled: true\r\n    })\r\n\r\n    try{\r\n\r\n      let res = await fetch('/login', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'aplication/json',\r\n          'Content-Type':  'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          email: this.state.email,\r\n          password: this.state.password\r\n        })\r\n      })\r\n\r\n      let result = await res.json();\r\n      if(result && result.success){\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.email = result.email;\r\n      }\r\n\r\n      else if(result && result.success === false){\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n    }\r\n\r\n    catch(e){\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n\r\n  }\r\n\r\n  async cadastrar(){\r\n    UserStore.cadastrar = true;\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n\r\n          <div >\r\n            <div className=\"login-text\">\r\n              <h2>Bem Vindo!</h2>\r\n            </div>\r\n            <div className=\"login-text\">\r\n              Efetue Login ...\r\n            </div>\r\n\r\n            <div className=\"login-form-box\">\r\n              <div>\r\n                <label>\r\n                  <InputField\r\n                    type='text'\r\n                      placeholder='E-mail'\r\n                    value={this.state.email ? this.state.email : ''}\r\n                    onChange={ (val) => this.setInputValue('email', val) }\r\n                  />\r\n                </label>\r\n              </div>\r\n              \r\n              <div>\r\n                <label>\r\n                  <InputField\r\n                    type='password'\r\n                    placeholder='Senha'\r\n                    value={this.state.password ? this.state.password : ''}\r\n                    onChange={ (val) => this.setInputValue('password', val) }\r\n                  />\r\n                </label>\r\n              </div>\r\n          \r\n                <div className=\"btn-login-box\">\r\n                  <div className=\"btn-login\">\r\n                    <SubmitButton \r\n                       text='Login'\r\n                       disabled={this.state.buttonDisabled}\r\n                        onClick={ () => this.doLogin() }\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"btn-cadastro\">\r\n                      <button \r\n                        className='btn' \r\n                        onClick={ () => this.cadastrar() }>\r\n                          <span>Cadastre-se</span>\r\n                        </button>\r\n                  </div>\r\n\r\n                  </div>\r\n              </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component }  from 'react';\r\nimport LoginForm   from './LoginForm'\r\nimport './Login.css'\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <div class=\"login-box\">\r\n                <LoginForm />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Login","import Rect, {Component} from 'react'\r\nimport UserStore from '../UserStore'\r\nimport InputField from './InputField'\r\nimport SubmitButton from './SubmitButton'\r\n\r\n\r\nclass Home extends Rect.Component{\r\n\r\n    render(){\r\n        return(    \r\n            <div className='container'>\r\n                Welcome { UserStore.username }\r\n\r\n                <SubmitButton \r\n                text={'Logout'}\r\n                disabled={false}\r\n                onClick={ () => this.doLogout() }\r\n                />\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport './Login.css'\r\nimport InputField from './InputField'\r\nimport UserStore from '.././UserStore'\r\nimport LoginForm from './LoginForm'\r\n\r\nclass CadastroForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        }\r\n      }\r\n\r\n      setInputValue(property, val){\r\n        val = val.trim();\r\n        if(val.length > 120){\r\n          return;\r\n        }\r\n        this.setState({\r\n          [property]: val\r\n        })\r\n      }\r\n    \r\n      resetForm() {\r\n        this.setState({\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        })\r\n      }\r\n\r\n\r\n      async doCadastro() {\r\n    \r\n        if(!this.state.username){\r\n          return;\r\n        }\r\n        if(!this.state.email){\r\n          return\r\n        }\r\n        if(!this.state.password){\r\n            return;\r\n          }\r\n    \r\n        this.setState({\r\n          buttonDisabled: true\r\n        })\r\n    \r\n        try{\r\n    \r\n          let res = await fetch('/cadastro', {\r\n            method: 'post',\r\n            headers: {\r\n              'Accept': 'aplication/json',\r\n              'Content-Type':  'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              username: this.state.username,\r\n              email: this.state.email,\r\n              password: this.state.password\r\n            })\r\n          })\r\n          \r\n          let result = await res.json();\r\n          if(result && result.success){\r\n             alert(result.msg);\r\n              UserStore.cadastrar = false;\r\n          }\r\n    \r\n          else if(result && result.success === false){\r\n            this.resetForm();\r\n            alert(result.msg);\r\n          }\r\n        }\r\n    \r\n        catch(e){\r\n          console.log(e);\r\n          this.resetForm();\r\n        }\r\n    \r\n      }\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"login-box\">\r\n                    <div className=\"login-text\">\r\n                        <h2>Cadastre-se já!</h2>\r\n                    </div>\r\n\r\n                    <div className=\"login-form-box\">\r\n                        <div>\r\n                            <label>\r\n                                <InputField\r\n                                    type='text'\r\n                                    placeholder='Nome'\r\n                                    value={this.state.username ? this.state.username : ''}\r\n                                    onChange={ (val) => this.setInputValue('username', val) }\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        \r\n                        <div>\r\n                            <label>\r\n                                <InputField\r\n                                    type='text'\r\n                                    placeholder='E-mail'\r\n                                    value={this.state.email ? this.state.email : ''}\r\n                                    onChange={ (val) => this.setInputValue('email', val) }\r\n                                />\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>\r\n                                <InputField\r\n                                    type='password'\r\n                                    placeholder='Senha'\r\n                                    value={this.state.password ? this.state.password : ''}\r\n                                    onChange={ (val) => this.setInputValue('password', val) }\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btn-cadastro\">\r\n                        \r\n                      <button \r\n                        className='btn'\r\n                        id=\"cadastrar\" \r\n                        onClick={ () => this.doCadastro() }>\r\n                          <span>Cadastrar</span>\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CadastroForm","import React        from 'react'\nimport { observer } from 'mobx-react'\nimport SubmitButton from './stores/componentes/SubmitButton'\nimport UserStore    from './stores/UserStore'\nimport                    './App.css'\nimport Login   from './stores/componentes/Login'\nimport Home from './stores/componentes/Home'\nimport CadastroForm from './stores/componentes/CadastroForm'\n\nclass App extends React.Component {\n\n  async componentDidMount() {\n\n    try {\n\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n\n      let result = await res.json();\n\n      if(result && result.success){\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.email = result.email;\n      }\n      else{\n        UserStore.loading = false;\n         UserStore.isLoggedIn = false;\n      }\n\n    }\n\n    catch(e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n\n  }\n\n  async doLogout() {\n\n    try {\n\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n\n      let result = await res.json();\n\n      if(result && result.success){\n        UserStore.isLoggedIn = false;\n        UserStore.email = '';\n      }\n\n    }\n\n    catch(e) {\n      console.log(e);\n    }\n\n  }\n\n  render(){\n\n    if(UserStore.loading){\n      return (\n        <div className=\"app\">\n          <div className='container'>\n            Loading, please wait ...\n          </div>\n        </div>\n      )\n    }\n    else{\n\n      if(UserStore.isLoggedIn){\n        return (\n          <div className=\"app\">\n            <Home />\n        </div>\n        );\n      }\n\n      if(UserStore.cadastrar){\n        return(\n        <CadastroForm />\n        );\n      }\n      return (\n        <div className=\"container\">\n            <Login />\n        </div>\n      );\n    }\n  }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}